

代理模式：为其他对象提供一种代理以控制对这个对象的访问。

按照代理对象的创建时期，代理模式可以分为两种:

静态代理：由程序员创建或特定工具自动生成源代码，再对其编译。在程序运行前，代理类的.class文件就已经存在了。 
动态代理：在程序运行时，运用反射机制动态创建代理类的.class。

另外，JDK提供的动态代理必须指定一个接口，若想获取没有实现任何接口的POJO的代理，则需要使用CGLib框架。
