动态代理模式下，被“控制访问”的对象（即target对象）可以在运行时改变，需要控制的接口可以在运行时改变 ，
控制的方式（即InvocationHandler的具体实现）也可以在运行时改变。
所以在这个代理模式中，代理者和被代理者的关系是完全动态的。

即便新增一个接口类或者接口新增一个方法，除了具体实现类需要修改外，动态代理相关的类是不需要修改的。

Java 动态代理机制的出现，使得Java开发人员不用手工编写代理类，只要简单地指定一组接口及委托类对象，便能动态地获得代理类。
代理类会负责将所有的方法调用分派到委托对象上反射执行，在分派执行的过程中，开发人员还可以按需调整委托类对象及其功能，这是一套非常灵活有弹性的代理框架。